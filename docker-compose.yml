version: '3.8'
name: Telemedi
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    restart: always
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - app_network
    depends_on:
      - db

  nginx:
    image: nginx:stable-alpine
    container_name: symfony_nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: symfony_db
    restart: always
    environment:
      MYSQL_DATABASE: app_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: symfony_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data: 
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
